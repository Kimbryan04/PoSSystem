<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>